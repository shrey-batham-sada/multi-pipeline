name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - 'batch_1/**'
    #   - 'batch_2/**'
    #   - 'batch_3/**'
    #   - 'batch_4/**'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./batch_1/Dockerfile
            image: ghcr.io/username/image1
          - dockerfile: ./batch_2/Dockerfile
            image: ghcr.io/username/image2
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Determine Changed Directories
        id: diff
        run: |
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -oE 'batch_[0-9]+/' | sort -u)
          echo "::set-output name=dirs::$CHANGED_DIRS"

      - name: Build and Push Docker Images
        run: |
          for DIR in ${{ steps.diff.outputs.dirs }}; do
            DOCKERFILE="./$DIR/Dockerfile"
            IMAGE="ghcr.io/username/image$(echo $DIR | grep -oE '[0-9]+')"
            echo "Building Dockerfile: $DOCKERFILE"
            echo "Image: $IMAGE"
            docker build . --file $DOCKERFILE --tag $IMAGE:$(date +%s)
            # You may want to push the image here as well
          done        

      # - name: Log in to the Container registry
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GH_PACKAGE_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ matrix.image }}

      # - name: Build and push Docker image Drill4Net.Agent.Service
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     file: ${{ matrix.dockerfile }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Build the Docker image
      #   run: docker build . --file ${{ matrix.dockerfile }} --tag my-image-name:$(date +%s)
